---
title: "BSMM-lab-2"
subtitle: "BSMM 8740 Fall 2023"
author: "Archana Vijayakumar Sreekala"
date: "September, 27 2023"
format: html
editor: visual
self-contained: true
---

## Setup

Load packages and data:

```{r load-pkg-data}
#| message: false

install.packages("tidyverse")
install.packages("tidymodels")
install.packages("gt")
install.packages("gtExtras")
install.packages("DataExplorer")

library(magrittr)     # the pipe
library(tidyverse)    # for data wrangling + visualization
library(tidymodels)   # for modeling
library(gt)           # for making display tables
library(gtExtras)     # helper functions for beautiful tables
library(DataExplorer) #

the_tate <- readr::read_delim("data/the-tate-collection.csv", ";", escape_double = FALSE, trim_ws = TRUE)
the_tate_artists <- readr::read_csv("data/the-tate-artists.csv")
```

## Exercises

### Exercise 1

The `the_tate` dataset has \_\_\_ unique artists who worked from \_\_\_ to \_\_\_. The works were acquired between the years \_\_\_ and \_\_\_.

```{r Data Analysis}

the_tate
the_tate_artists

dim(the_tate)
dim(the_tate_artists)

the_tate |> dplyr::slice_head(n=2) |> dplyr::glimpse()
the_tate_artists |> dplyr::slice_head(n=2) |> dplyr::glimpse() 

view(the_tate)
view(the_tate_artists)

summary(the_tate)

# Summarise function to group by each artist and find the summarised information 
the_tate |> dplyr::group_by(artist) |>
  dplyr::summarise(N=n(), 
         min_year = min(year, na.rm = TRUE),          
         max_year = max(year, na.rm = TRUE), 
         min_acquisition_year = min(acquisitionYear, na.rm = TRUE),
         max_acquisition_year = max(acquisitionYear, na.rm = TRUE)
  )

library(dplyr)
# To find the number of unique artists

unique_artist_count <- 
  the_tate |> select(artist) |>
         distinct() |>
         nrow() 
# To find the range of years that the artists worked
min_year <- min(the_tate$year, na.rm = TRUE)         
max_year <- max(the_tate$year, na.rm = TRUE)  
# To find the range of acquisition years
min_acquisition_year <- min(the_tate$acquisitionYear, na.rm = TRUE)
max_acquisition_year <- max(the_tate$acquisitionYear, na.rm = TRUE)

cat("The the_tate dataset has", unique_artists_count, "unique artists who worked from",
    min_year, "to", max_year, ".\n The works were acquired between the years", min_acquisition_year, "and", max_acquisition_year, ".\n")


DataExplorer::introduce(the_tate)
DataExplorer::introduce(the_tate_artists)

DataExplorer::plot_missing(the_tate) 
DataExplorer::plot_missing(the_tate_artists)
```

### Exercise 2

How number of works with missing dates is \_\_.

```{r number of works with missing dates}


Total_missing_date <- sum(is.na(the_tate$year))
cat("How many number of works with missing dates is", Total_missing_date,".\n")
```

The number of artists whose works have missing dates is \_\_.

```{r number of artists whose works have missing dates}

missing_dates_artists <- the_tate |> dplyr::filter(is.na(year)) |>
                         dplyr::distinct(artist) |>
                         nrow()
 
cat("The number of artists whose works have missing dates is",missing_dates_artists, ".\n")        
```

```{r count of works missing data against each artist arranged in desc order}


Artists_missing_dates <- the_tate |> dplyr::filter(is.na(year)) |>
                         group_by(artist) |>
                         summarise( Missing_dates = n())|>
                         arrange(desc(Missing_dates)) |>
                         as_tibble()
Artists_missing_dates
```

```{r Include percentage of missing dates per artists}

Artists_missing_dates <- Artists_missing_dates |> 
                         mutate(percentage_missing_dates = (Missing_dates/Total_missing_date)*100)

Artists_missing_dates
```

```{r To find the cumulative percentage against each artists}

Artists_missing_dates <- Artists_missing_dates |> 
                         mutate(cumulative_percentage = cumsum(percentage_missing_dates))

Artists_missing_dates
```

```{r smallest number of arists needed to resolve at least 50% of the missing year data}

artist_to_resolve_50_percent <- min(which(Artists_missing_dates$cumulative_percentage >= 50))

cat("It would require resolving missing year data for only", artist_to_resolve_50_percent, "artists to resolve at least 50% of the missing data.\n")

cat("\nThe missing year data likely to be classified as MAR")

```

### Exercise 3

```{r artist with most works in the tate collection}

artist_max_work <- the_tate |> group_by(artist) |>
                   summarise(no_of_works = n()) |>
                   arrange(desc(no_of_works))
artist_max_work

#artist_max_work |> select (artist) |> slice_head(n=1) 
```

```{r top 10 artists with most of the works}

top_ten_artists <- artist_max_work |> slice_head(n=10) 
top_ten_artists
```

The artist with the most works in the Tate collection is **Turner, Joseph Mallord William**.

The artist with the tenth-most works in the Tate collection is Warhol, Andy.

### Exercise 4

The artist with the greatest number of works in the Tate collection represent \_\_\_% of the total number of works

```{r percentage of the total collection that each artist represents}

# Total number of works
Total_no_of_works <- artist_max_work |> nrow(artist_max_work)
Total_no_of_works
# Percentage of total collection per artist

artist_max_work |> mutate(percentage_of_works =(no_of_works)/(Total_no_of_works))

view(artist_max_work)

```

### Exercise 5

There are .... duplicate artist-title pairs

```{r to find duplicate records}

# select the columns for artist and title and count the number of rows

total_rows <- the_tate |> select(artist,title) |> nrow()

# Count the distinct artist-title pairs

 distinct_artist_title <- the_tate |> select(artist,title) |> distinct()
 distinct_rows <- nrow(distinct_artist_title)

# count the number of duplicated artist-title pair
 duplicate_count <- total_rows - distinct_rows
 cat ("There are", duplicate_count, "duplicate artist-title pairs .\n")
```

### Exercise 6

The artist with the largest work in the tate collection is \_\_\_

The artist with the smallest work in the collection is \_\_\_. The smallest work has area \_\_\_ $\text{cm}^2$

### Exercise 7

...

### Exercise 8

The annual return in the SPX price in 2020 was \_\_\_%.

The corresponding price volatility was \_\_\_%.

### Exercise 9

The period volatility was \_\_\_.\_%

### 
